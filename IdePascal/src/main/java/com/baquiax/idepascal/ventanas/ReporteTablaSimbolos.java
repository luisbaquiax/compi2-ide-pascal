/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.baquiax.idepascal.ventanas;

import com.baquiax.idepascal.backend.funcion.Funtion;
import com.baquiax.idepascal.backend.funcion.Parametro;
import com.baquiax.idepascal.backend.simbol.AST;
import com.baquiax.idepascal.backend.simbol.Categoria;
import com.baquiax.idepascal.backend.simbol.Simbolo;
import com.baquiax.idepascal.backend.simbol.Tipo;
import com.baquiax.idepascal.backend.stament.Sentencia;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis
 */
public class ReporteTablaSimbolos extends javax.swing.JFrame {

    private DefaultTableModel model;
    private AST ast;

    /**
     *
     * @param ast
     */
    public ReporteTablaSimbolos(AST ast) {
        initComponents();
        this.ast = ast;
        setLocationRelativeTo(null);
        setValueTable();
    }

    private void setValueTable() {
        model = (DefaultTableModel) tableSimbols.getModel();
        model.setRowCount(0);
        Map<String, Object> map = ast.getReporteSimbolos();
        for (String key : map.keySet()) {
            Simbolo value = (Simbolo) map.get(key);
            String data[] = new String[]{
                key,
                value.getCategoria().name(),
                value.getTipo().getTypeBase().name(),
                "",
                "",
                value.getAmbito()
            };
            model.addRow(data);
        }
        for (Sentencia s : ast.getFunciones()) {
            Funtion funcion = (Funtion) s;
            funcion.setParams();
            String data[] = new String[]{
                funcion.getId(),
                Categoria.FUNCION.name(),
                funcion.tipo.getDataType().name(),
                funcion.getParametros().size() + "",
                "",
                ast.getGlobal().getNombre()
            };
            model.addRow(data);
            for (int i = 0; i < funcion.getParams().size(); i++) {
                Map<String, Object> map2 = funcion.getParams().get(i);
                Parametro param = (Parametro) map2.get("tipo");

                System.out.println("id " + map2.get("id") + " tipo " + param.getDataType());
                String datos[] = new String[]{
                    map2.get("id").toString(),
                    Categoria.PARAMETRO.name(),
                    param.getDataType().name(),
                    "",
                    "",
                    funcion.getId()
                };
                model.addRow(datos);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSimbols = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tabla de símbolos");

        tableSimbols.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoría", "Tipo", "Parametros", "Dirección", "Ambito"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableSimbols);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableSimbols;
    // End of variables declaration//GEN-END:variables
}
